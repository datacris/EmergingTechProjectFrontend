{"version":3,"sources":["components/Dashboard.js","components/Home.js","components/About.js","providers/StateProvider.js","providers/reducer.js","components/EmergencyAlerts/EmergencyAlert.js","components/EmergencyAlerts/EmergencyAlertList.js","components/EmergencyAlerts/EmergencyAlertResponse.js","components/EmergencyAlerts/EmergencyAlertsByPatient.js","components/VitalSigns/CreateVitalSigns.js","components/VitalSigns/VitalSignsByPatient.js","components/Authentication/SignUp.js","components/Authentication/SignIn.js","components/EmergencyAlerts/CreateEmergencyAlert.js","components/Patients/ListPatients.js","components/MotivationalMessages/VideoPlayer.js","components/MotivationalMessages/MotivationalMessageCard.js","components/MotivationalMessages/MotivationalMessagesList.js","components/MotivationalMessages/CreateMotivationalMessage.js","App.js","index.js"],"names":["withRouter","props","classes","useStyles","useState","unansweredAlerts","setUnansweredAlerts","useEffect","readCookie","getUnansweredAlerts","userRole","setUserRole","userEmail","setUserEmail","userId","setUserId","a","Axios","get","res","data","history","push","console","log","deleteCookie","className","root","CssBaseline","AppBar","position","appBar","Toolbar","Typography","variant","noWrap","title","IconButton","color","fontSize","length","to","Badge","badgeContent","justify","Drawer","drawer","paper","drawerPaper","drawerContainer","List","ListItem","button","ListItemIcon","ListItemText","primary","onClick","pathname","Divider","makeStyles","theme","display","zIndex","width","flexShrink","overflow","content","flexGrow","padding","spacing","class","autoplay","description","image","map","item","index","style","background","alt","src","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","then","result","catch","error","response","state","action","type","respondEmergencyAlert","alertId","alertState","Button","size","startIcon","_id","alertMessage","createdBy","fullName","format","creationDate","answerDate","medicalResponse","answeredBy","endpoint_API","emergencyAlerts","setEmergencyAlerts","showLoading","setShowLoading","getEmergencyAlerts","Spinner","animation","role","component","toast","configure","apiUrl","match","params","emergencyAlert","setEmergencyAlert","patient","setPatient","paramsAlertId","getEmergencyAlert","Grid","container","email","xs","sm","TextField","autoComplete","name","required","fullWidth","id","label","autoFocus","onChange","event","persist","target","put","info","POSITION","BOTTOM_RIGHT","paramsUsertId","getPatient","addEmegencyAlert","creator","setCreator","bodyTemperature","heartRate","bloodPressure","respiratoryRate","vitalSigns","setVitalSigns","getCreatorUser","post","setTimeout","registerVitalSigns","getVitalSigns","userType","date","Copyright","align","Link","href","Date","getFullYear","marginTop","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","React","radioTypeValue","setRadioTypeValue","firstName","lastName","password","user","setUser","Container","maxWidth","Avatar","noValidate","onSubmit","preventDefault","FormControl","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","Box","mt","height","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","setEmail","setPassword","authenticate","loginData","auth","status","message","md","Paper","elevation","square","e","registerAlert","patients","setPatients","fetchData","VideoPlayer","url","controls","playing","modal","justifyContent","border","boxShadow","shadows","open","setOpen","Card","CardActionArea","CardMedia","linkImage","CardContent","gutterBottom","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","linkVideo","motivationalMessages","setMotivationalMessages","getMotivationalMessages","CardColumns","motivationalMessage","setMotivationalMessage","createMotivationalMessage","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5eba27e8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport { Link, withRouter } from 'react-router-dom';\nimport Axios from 'axios';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AddAlertIcon from '@material-ui/icons/AddAlert';\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\nimport TheatersIcon from '@material-ui/icons/Theaters';\nimport StarsIcon from '@material-ui/icons/Stars';\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\nimport './Styles.css'\n\n\nfunction Dashboard(props) {\n\n  const classes = useStyles();\n\n  const [unansweredAlerts, setUnansweredAlerts] = useState([]);\n\n  useEffect(() => {\n\n    readCookie();\n    getUnansweredAlerts();\n\n  }, []);\n\n\n  //To store cookie credentials\n  const [userRole, setUserRole] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userId, setUserId] = useState('');\n\n  //Reads the cookie to get user info\n  const readCookie = async () => {\n    try {\n\n      const res = await Axios.get('/read_cookie');\n\n      if (res.data.userEmail !== '') {\n\n        setUserEmail(res.data.userEmail);\n        setUserRole(res.data.userRole);\n        setUserId(res.data.userId);\n        // getCourses(res.data.userId);\n      }\n\n    } catch (e) {\n      setUserRole('');\n      props.history.push('/SignIn')\n      console.log(e);\n    }\n  };\n\n  //******************************************** */\n  //Gets the unanswered alerts\n  //******************************************** */\n  const getUnansweredAlerts = async () => {\n\n    //Get emergency alerts \n    const res = await Axios('/unansweredAlerts/');\n    setUnansweredAlerts(res.data);\n  }\n\n  // called when user clicks on Logout button\n  // to clear the cookie and set the screen state variable \n  const deleteCookie = async () => {\n    try {\n      await Axios.get('/signOut');\n      setUserRole('');\n      props.history.push('/')\n\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar} >\n        <Toolbar className='toolbar__custom'>\n          <Typography variant=\"h5\" noWrap>\n            {props.title}\n          </Typography>\n\n\n\n          <div className='notification__custom'>\n            <IconButton color=\"inherit\" fontSize=\"large\">\n              {userRole === 'nurse' ?\n\n                (unansweredAlerts.length > 0 ?\n                  <Link to='/emergencyAlerts' >\n                    <Badge badgeContent={unansweredAlerts.length} color=\"secondary\" fontSize=\"large\">\n                      <NotificationsIcon fontSize=\"large\" />\n                    </Badge>\n                  </Link> :\n                  <Badge color=\"secondary\" fontSize=\"large\">\n                    <NotificationsIcon fontSize=\"large\" />\n                  </Badge>)\n                :\n                <Badge color=\"secondary\" fontSize=\"large\">\n                  <NotificationsIcon fontSize=\"large\" />\n                </Badge>\n              }\n\n\n            </IconButton>\n          </div>\n\n\n\n          <div className='user_header__custom'>\n            <Typography variant=\"h5\" noWrap >\n              Hi {userRole} <AccountCircleIcon fontSize=\"large\" />\n            </Typography>\n            <Typography variant=\"h6\" noWrap justify=\"flex-end\" >\n              {userEmail}\n            </Typography>\n          </div>\n\n\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n\n          <List className=\"link__custom\">\n\n            {userRole === 'nurse' ?\n              <div>\n\n                <Link to='/Home' >\n                  <ListItem button>\n                    <ListItemIcon>\n                      <DashboardIcon fontSize=\"large\" color={props.title === 'Home' ? 'secondary' : 'primary'} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                  </ListItem>\n                </Link>\n\n                <Link to='/listPatients'>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <PeopleIcon fontSize=\"large\" color={props.title === 'Patient list' ? 'secondary' : 'primary'} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Patients\" />\n                  </ListItem>\n                </Link>\n\n                <Link to='/emergencyAlerts'>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <AddAlertIcon fontSize=\"large\" color={props.title === 'Emergency Alerts' ? 'secondary' : 'primary'} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Emergency alerts\" />\n                  </ListItem>\n                </Link>\n\n                <Link>\n                  <ListItem button\n                    onClick={() => {\n                      props.history.push({\n                        pathname: '/motivationalMessages'\n                      });\n                    }}  >\n                    <ListItemIcon>\n                      <StarsIcon fontSize=\"large\" color={props.title === 'Motivational Messages' ? 'secondary' : 'primary'} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Motivational Messages\" />\n                  </ListItem>\n                </Link>\n\n                <Link>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <BarChartIcon fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Checklist Reports\" />\n                  </ListItem>\n                </Link>\n\n\n              </div>\n              :\n              <div></div>\n\n            }\n\n            {userRole === 'patient' ?\n              <div>\n                <Link to='/Home' >\n                  <ListItem button>\n                    <ListItemIcon>\n                      <DashboardIcon fontSize=\"large\" color={props.title === 'Home' ? 'secondary' : 'primary'} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                  </ListItem>\n                </Link>\n\n                <Link>\n                  <ListItem button\n                    onClick={() => {\n                      props.history.push({\n                        pathname: '/emergencyAlertsBypatient/' + userId\n                      });\n                    }}  >\n                    <ListItemIcon>\n                      <AddAlertIcon fontSize=\"large\" color={props.title === 'Emergency Alerts' ? 'secondary' : 'primary'} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Emergency alerts\" />\n                  </ListItem>\n                </Link>\n\n                <Link>\n                  <ListItem button\n                    onClick={() => {\n                      props.history.push({\n                        pathname: '/vitalSignsBypatient/' + userId\n                      });\n                    }}  >\n                    <ListItemIcon>\n                      <LocalHospitalIcon fontSize=\"large\" color={props.title === 'Vital Signs' ? 'secondary' : 'primary'} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Vital signs\" />\n                  </ListItem>\n                </Link>\n\n                <Link>\n                  <ListItem button\n                    onClick={() => {\n                      props.history.push({\n                        pathname: '/motivationalMessages'\n                      });\n                    }}  >\n                    <ListItemIcon>\n                      <TheatersIcon fontSize=\"large\" color={props.title === 'Motivational Messages' ? 'secondary' : 'primary'} />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Motivational Messages\" />\n                  </ListItem>\n                </Link>\n\n                <Link>\n                  <ListItem button>\n                    <ListItemIcon>\n                      <PlaylistAddCheckIcon fontSize=\"large\" />\n                    </ListItemIcon>\n                    <ListItemText primary=\"Checklist\" />\n                  </ListItem>\n                </Link>\n              </div>\n              :\n              <div></div>\n\n            }\n\n          </List>\n\n          <Divider />\n\n          <Link to='/about'  >\n            <ListItem button >\n              <ListItemIcon>\n                <HelpOutlineIcon fontSize=\"large\" color={props.title === 'About this app' ? 'secondary' : 'primary'} />\n              </ListItemIcon>\n              <ListItemText primary=\"About App\" />\n            </ListItem>\n          </Link>\n\n          <Link>\n            <List className=\"link__custom\">\n              <ListItem button onClick={deleteCookie}>\n                <ListItemIcon>\n                  <ExitToAppIcon fontSize=\"large\" />\n                </ListItemIcon>\n                <ListItemText primary=\"Log out\" />\n              </ListItem>\n            </List>\n          </Link>\n\n\n        </div>\n      </Drawer>\n\n\n    </div>\n  );\n}\n\nexport default withRouter(Dashboard);\n\n\n\n\n\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n","import { withRouter } from 'react-router-dom';\r\nimport React from 'react';\r\nimport './Styles.css'\r\nimport Dashboard from './Dashboard';\r\nimport Slider from 'react-animated-slider';\r\nimport 'react-animated-slider/build/horizontal.css';\r\n\r\nfunction Home(props) {\r\n\r\n    const slides = [\r\n        { title: 'HEALTH APP', description: 'This app helps patient to be in touch with nurse practitioners', image: 'https://www.nurseoncall.ie/_fileupload/Image/Homepage_Banner3.jpg_Thumbnail0.jpg' },\r\n        { title: 'Emergency alerts', description: 'Emergency messages for medical attention', image: 'https://images.unsplash.com/photo-1532938911079-1b06ac7ceec7?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1489&q=80' },\r\n        { title: 'Motivational Messages', description: 'Multimedia motivational messages', image: 'https://images.unsplash.com/photo-1545205597-3d9d02c29597?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80' },\r\n        { title: 'Vital Signs', description: 'Patient and Nurse vital signs to monitor patient health', image: 'https://images.unsplash.com/photo-1615486511484-92e172cc4fe0?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1351&q=80' },\r\n        { title: 'Machine Learning', description: 'Checklists for machine learning processes', image: 'https://images.unsplash.com/photo-1504711331083-9c895941bf81?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&auto=format&fit=crop&w=1350&q=80' }\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            < Dashboard title='Home' />\r\n\r\n            <div class=\"container container__custom\">\r\n\r\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom home__custom\">\r\n                    <h2 class=\"jumbotron-heading\">  </h2>\r\n\r\n                    <Slider autoplay={1000}>\r\n                        {slides.map((item, index) => (\r\n                            <div\r\n                                key={index}\r\n                                style={{ background: `url('${item.image}') no-repeat center center` }}\r\n                            >\r\n                                <div className='slider__custom'>\r\n                                    <h1>{item.title}</h1>\r\n                                    <h5>{item.description}</h5>\r\n                                    {/* <button>{item.button}</button> */}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </Slider>\r\n\r\n                </section>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(Home);","import { withRouter } from 'react-router-dom';\r\nimport React, { Component } from 'react';\r\nimport './Styles.css'\r\nimport Dashboard from './Dashboard';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nfunction About(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n            < Dashboard title='About this app' />\r\n\r\n            <div class=\"container container__custom\">\r\n\r\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom\">\r\n\r\n                    <div>\r\n                        <div class=\"card mb-3 bg-light\" >\r\n                            <div class=\"row no-gutters\">\r\n                                <div class=\"col-md-4\">\r\n                                    <img alt=\"Responsive image\" src=\"https://images.unsplash.com/photo-1551033406-611cf9a28f67?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=634&q=80\" class=\"card-img\" alt=\"...\" />\r\n                                    {/* <img alt=\"Responsive image\" src=\"https://images.unsplash.com/photo-1557853197-aefb550b6fdc?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=675&q=80\" class=\"card-img\" alt=\"...\" /> */}\r\n                                </div>\r\n                                <div class=\"col-md-8\">\r\n                                    <div class=\"card-body\">\r\n                                        <h2> Full-Stack web app  </h2>\r\n                                        <h4>MERN Stack approach</h4>\r\n                                        <hr></hr>\r\n\r\n                                        <div className='about_items__custom'>\r\n                                            <h4><CheckCircleOutlineIcon className='check__custom' /> Back-End: Rest API using Express js, Node js</h4>\r\n                                            <h4><CheckCircleOutlineIcon className='check__custom' /> Front-End using React, Bootstrap, Material-UI</h4>\r\n                                            <h4><CheckCircleOutlineIcon className='check__custom' /> DBS: MongoDB (mongoose)</h4>\r\n                                            <h4><CheckCircleOutlineIcon className='check__custom' /> Machine Learning: linear regression </h4>\r\n                                            <h4><CheckCircleOutlineIcon className='check__custom' /> Authentication using JWT</h4>\r\n                                            <hr></hr>\r\n                                            <h4><CheckCircleOutlineIcon className='check__custom' /> Animated Slider</h4>\r\n                                            <h4><CheckCircleOutlineIcon className='check__custom' /> Notification System</h4>\r\n                                            <h4><CheckCircleOutlineIcon className='check__custom' /> Video player</h4>\r\n                                            <hr></hr>\r\n                                            <h4><CheckCircleOutlineIcon className='check__custom' /> MongoDB Atlas deployment (Cloud)</h4>\r\n                                            <h4><CheckCircleOutlineIcon className='check__custom' /> Heroku Backend deploymeny  (Cloud)</h4>\r\n\r\n                                        </div>\r\n\r\n                                        <hr></hr>\r\n                                        <p class=\"card-text\"><small class=\"text-muted\">Developed by Cristian Zuluaga</small></p>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </section>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default withRouter(About);","import React, { createContext, useContext, useReducer } from \"react\";\n\n//Prepares the data layer\nexport const StateContext = createContext();\n\n//Wrap the app and provide data layer\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\n//pull info from data layer\nexport const useStateValue = () => useContext(StateContext);","import Axios from \"axios\";\n\nexport const initialState = {\n  user: null,\n  endpoint_API: 'https://cristian-zuluaga-emerging-tech-final-project.netlify.app',\n  // endpoint_API: 'http://localhost:3000',\n};\n\n//***************************************** */\n//Use promises to get user info in the cookie\n//***************************************** */\nexport const readCookie = (\n\n  Axios.get('/read_cookie')\n    .then((result) => {\n      return (result.data);\n    })\n    .catch((error) => {\n      console.log(error);\n    }))\n  .then((response) => {\n    return response;\n  });\n\n\nconst reducer = (state, action) => {\n\n  console.log(action);\n\n  switch (action.type) {\n    case 'ACTION':\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect, useState } from 'react';\nimport { withRouter } from 'react-router';\nimport '../Styles.css'\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\nimport { Button, Typography } from '@material-ui/core';\nimport { readCookie } from \"../../providers/reducer\"\nimport Moment from 'react-moment';\nimport Axios from 'axios';\nimport { useStateValue } from '../../providers/StateProvider';\n\nfunction EmergencyAlert(props) {\n\n    //To store cookie credentials\n    const [userRole, setUserRole] = useState('');\n    const [userEmail, setUserEmail] = useState('');\n    const [userId, setUserId] = useState('');\n\n    useEffect(() => {\n\n        const getUserInfo = () => {\n            readCookie.then((result) => {\n                setUserEmail(result.userEmail);\n                setUserRole(result.userRole);\n                setUserId(result.userId);\n            });\n        }\n        getUserInfo();\n    }, []);\n\n    //******************************************** */\n    // Open the emergency alert to be responded\n    //******************************************** */\n    const respondEmergencyAlert = async (alertId) => {\n\n        props.history.push({\n            pathname: '/emergencyAlertResponse/' + alertId\n        });\n    }\n\n    return (\n        <div>\n            <div class=\"card text-left bg-light mb-3 card__custom\" >\n\n                <div class=\"card-header\">\n                    {props.alertState === 'created' ?\n                        <div className='emergency_alert__custom'>\n                            <Typography noWrap color='secondary'>\n                                Emergency alert Open <NewReleasesIcon color='secondary' />\n                            </Typography>\n\n                            {userRole === 'nurse' ?\n                                <div className='button_response__custom'>\n                                    <Button\n                                        size='small'\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        startIcon={<NewReleasesIcon />}\n                                        onClick={() => { respondEmergencyAlert(props._id) }}\n                                    > Response\n                                    </Button>\n                                </div> :\n                                <div></div>\n                            }\n                        </div>\n                        :\n                        <div className='emergency_alert__custom'>\n                            <Typography noWrap >\n                                Emergency alert Closed <DoneOutlineIcon />\n                            </Typography>\n\n                        </div>\n                    }\n\n\n\n                </div>\n\n                <div class=\"card-body\">\n                    <h5 class=\"card-title\"><strong>Alert message:</strong> {props.alertMessage}</h5>\n                    <p class=\"card-text\">{props.createdBy.fullName} - <Moment format=\"YYYY-MM-DD HH:mm\">{props.creationDate}</Moment></p>\n\n                    {props.answerDate &&\n                        <div>\n                            <hr></hr>\n                            <h5 class=\"card-title\"><strong>Response:</strong> {props.medicalResponse}</h5>\n                            <p class=\"card-text\">Nurse. {props.answeredBy.fullName} - <Moment format=\"YYYY-MM-DD HH:mm\">{props.answerDate}</Moment></p>\n                        </div>\n                    }\n\n                </div>\n            </div>\n        </div >\n\n    );\n}\nexport default withRouter(EmergencyAlert);\n","\nimport { withRouter } from 'react-router-dom';\nimport React, { Component, useEffect, useState } from 'react';\nimport '../Styles.css'\nimport Dashboard from '../Dashboard';\nimport { useStateValue } from '../../providers/StateProvider';\nimport Axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Button, Typography } from '@material-ui/core';\nimport { readCookie } from \"../../providers/reducer\"\n\nimport EmergencyAlert from './EmergencyAlert';\n\nfunction EmergencyAlertList(props) {\n\n    const [{ endpoint_API }, dispatch] = useStateValue();\n\n    const [emergencyAlerts, setEmergencyAlerts] = useState([]);\n\n    const [patient, setPatient] = useState([]);\n\n    const [showLoading, setShowLoading] = useState(true);\n\n\n    useEffect(() => {\n\n        setShowLoading(true);\n        getEmergencyAlerts();\n\n        setShowLoading(false);\n\n    }, []);\n\n\n    //******************************************** */\n    //Gets emergency alerts\n    //******************************************** */\n    const getEmergencyAlerts = async () => {\n\n        //Get emergency alerts \n        const res = await Axios('/emergencyAlertsList/');\n        setEmergencyAlerts(res.data);\n    }\n\n    //Call the view for register vital signs to parient by Id\n    // const addEmegencyAlert = (userId) => {\n    //     props.history.push({\n    //         pathname: '/registerEmergencyAlert/' + userId\n    //     });\n    // }\n\n    return (\n        <div>\n            < Dashboard title='Emergency Alerts' />\n\n            <div class=\"container container__custom\">\n\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom\">\n\n                    {showLoading &&\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    }\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Emergency Alerts\n                    </Typography>\n                    <hr></hr>\n\n                    {emergencyAlerts.map((item) => (\n                        <EmergencyAlert\n                            key={item._id}\n                            _id={item._id}\n                            alertMessage={item.alertMessage}\n                            medicalResponse={item.medicalResponse}\n                            alertState={item.alertState}\n                            createdBy={item.createdBy}\n                            answeredBy={item.answeredBy}\n                            creationDate={item.creationDate}\n                            answerDate={item.answerDate}\n                        />\n                    ))}\n\n                    <hr></hr>\n\n                </section>\n\n            </div>\n        </div>\n    );\n\n}\n\nexport default withRouter(EmergencyAlertList);","\nimport { withRouter } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport '../Styles.css'\nimport Dashboard from '../Dashboard';\nimport { useStateValue } from '../../providers/StateProvider';\nimport Axios from 'axios';\nimport { Button, Grid, TextField, Typography } from '@material-ui/core';\nimport Spinner from 'react-bootstrap/Spinner';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListIcon from '@material-ui/icons/List';\nimport Moment from 'react-moment';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { readCookie } from '../../providers/reducer';\ntoast.configure();\n\nfunction EmergencyAlertResponse(props) {\n\n    const [{ endpoint_API }, dispatch] = useStateValue();\n\n    const apiUrl =  \"/responseEmergencyAlert/\" + props.match.params.alertId;\n\n    const [emergencyAlert, setEmergencyAlert] = useState([]);\n\n    const [patient, setPatient] = useState([]);\n\n    //To store cookie credentials\n    const [userRole, setUserRole] = useState('');\n    const [userEmail, setUserEmail] = useState('');\n    const [userId, setUserId] = useState('');\n\n    const [showLoading, setShowLoading] = useState(true);\n\n    const paramsAlertId = props.match.params.alertId;\n\n\n    useEffect(() => {\n\n        setShowLoading(true);\n        getEmergencyAlert(paramsAlertId);\n\n        const getUserInfo = () => {\n            readCookie.then((result) => {\n                setUserEmail(result.userEmail);\n                setUserRole(result.userRole);\n                setUserId(result.userId);\n            });\n        }\n        getUserInfo();\n\n\n\n        setShowLoading(false);\n\n    }, []);\n\n    //******************************************** */\n    //  Get the emergency alert by its Id\n    //******************************************** */\n    const getEmergencyAlert = async (alertId) => {\n        const result = await Axios('/emergencyAlertById/' + alertId);\n        setEmergencyAlert(result.data);\n        setPatient(result.data.createdBy);\n        console.log(result.data)\n    }\n\n\n    //updates the alert message values when changing the values\n    const onChange = (event) => {\n        event.persist();\n        setEmergencyAlert({ ...emergencyAlert, [event.target.name]: event.target.value });\n    }\n\n    //*************************** */\n    //send response to backend\n    //************************** */\n    const respondEmergencyAlert = () => {\n        setShowLoading(true);\n\n        const data = {\n            _id: emergencyAlert._id,\n            medicalResponse: emergencyAlert.medicalResponse,\n            answeredBy: userId,\n        };\n        Axios.put(apiUrl, data)\n            .then((result) => {\n                setShowLoading(false);\n                toast.info('Emergency alert has been responded successfully!', { position: toast.POSITION.BOTTOM_RIGHT })\n                props.history.push('/emergencyAlerts/')\n            }).catch((error) => setShowLoading(false));\n    };\n\n    return (\n        <div>\n            < Dashboard title='Emergency Alert - Response' />\n\n            <div class=\"container container__custom\">\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom\">\n\n                    {showLoading &&\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    }\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Emergency Alert\n                    </Typography>\n\n                    <hr></hr>\n\n                    <Grid container spacing={2}>\n\n                        <div class=\"card mb-3 bg-light border-dark alert_card_response__custom\" >\n                            <div class=\"row no-gutters\">\n                                <div class=\"col-md-4\">\n                                    <img\n                                        src=\"https://cdn.shopify.com/s/files/1/2809/4372/products/MEDICAL_ICON_aad3cda6-293e-439c-812c-d4a8bc2252df_1024x1024@2x.png?v=1538711296\"\n                                        class=\"card-img alert_image__custom\" />\n\n                                </div>\n                                <div class=\"col-md-8 alert_card_content_response__custom\">\n                                    <div class=\"card-body\">\n                                        <h4 class=\"card-title\"><strong>Patient:</strong> {patient.fullName}</h4>\n                                        <h4 class=\"card-title\"><strong>Email:</strong> {patient.email}</h4>\n                                        <h2 class=\"card-text\">{emergencyAlert.alertMessage}</h2>\n                                        <p class=\"card-text\"> Creation date: <Moment format=\"YYYY-MM-DD HH:mm\">{emergencyAlert.creationDate}</Moment></p>\n\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                autoComplete=\"medicalResponse\"\n                                name=\"medicalResponse\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"medicalResponse\"\n                                label=\"Medical Response\"\n                                autoFocus\n                                value={emergencyAlert.medicalResponse}\n                                onChange={onChange}\n                            />\n                        </Grid>\n\n\n                    </Grid>\n\n                    <hr></hr>\n\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='button__custom'\n                        startIcon={<AddIcon />}\n                        onClick={() => { respondEmergencyAlert() }}\n                    >\n                        send response\n                    </Button>\n\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<ListIcon />}\n                        className='button__custom'\n                        onClick={() => {\n                            props.history.push({\n                                pathname: '/emergencyAlerts/'\n                            });\n                        }}\n                    > Back\n                    </Button>\n\n\n\n                </section>\n            </div>\n        </div>\n    );\n\n}\n\nexport default withRouter(EmergencyAlertResponse);","import { withRouter } from 'react-router-dom';\nimport React, { Component, useEffect, useState } from 'react';\nimport '../Styles.css'\nimport Dashboard from '../Dashboard';\nimport { useStateValue } from '../../providers/StateProvider';\nimport Axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Button, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport EmergencyAlert from './EmergencyAlert';\nimport { readCookie } from '../../providers/reducer';\n\nfunction EmergencyAlertsByPatient(props) {\n\n    const [{ endpoint_API }, dispatch] = useStateValue();\n\n    const [emergencyAlerts, setEmergencyAlerts] = useState([]);\n\n    const [patient, setPatient] = useState([]);\n\n    const [showLoading, setShowLoading] = useState(true);\n\n    const paramsUsertId = props.match.params.userId\n\n    //To store cookie credentials\n    const [userRole, setUserRole] = useState('');\n    const [userEmail, setUserEmail] = useState('');\n    const [userId, setUserId] = useState('');\n\n\n    useEffect(() => {\n\n        setShowLoading(true);\n        getEmergencyAlerts(paramsUsertId);\n        getPatient(paramsUsertId);\n        setShowLoading(false);\n\n        const getUserInfo =() => {\n            readCookie.then((result) => {\n                setUserEmail(result.userEmail);\n                setUserRole(result.userRole);\n                setUserId(result.userId);\n            });\n        }   \n        getUserInfo();\n\n    }, []);\n\n\n    //******************************************** */\n    //  Get the patient \n    //******************************************** */\n    const getPatient = async (userId) => {\n        const result = await Axios('/user/' + userId);\n        setPatient(result.data);\n    }\n\n    //******************************************** */\n    //Gets patien's emergency alerts\n    //******************************************** */\n    const getEmergencyAlerts = async (userId) => {\n\n        //Get emergency alerts by patient\n        const res = await Axios('/emergencyAlertsBypatient/' + userId);\n        console.log(res.data)\n        setEmergencyAlerts(res.data);\n    }\n\n    //Call the view for register vital signs to parient by Id\n    const addEmegencyAlert = (userId) => {\n        props.history.push({\n            pathname: '/registerEmergencyAlert/' + userId\n        });\n    }\n\n    return (\n        <div>\n            < Dashboard title='Emergency Alerts' />\n\n            <div class=\"container container__custom\">\n\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom\">\n\n                    {showLoading &&\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    }\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Emergency Alerts - Patient: {patient.fullName}\n                    </Typography>\n                    <hr></hr>\n\n                    {emergencyAlerts.map((item) => (\n                        <EmergencyAlert\n                            id={item._id}\n                            alertMessage={item.alertMessage}\n                            medicalResponse={item.medicalResponse}\n                            alertState={item.alertState}\n                            createdBy={item.createdBy}\n                            answeredBy={item.answeredBy}\n                            creationDate={item.creationDate}\n                            answerDate={item.answerDate}\n                        />\n                    ))}\n\n\n                    <hr></hr>\n\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<AddIcon />}\n                        className='button__custom'\n                        onClick={() => { addEmegencyAlert(paramsUsertId) }}\n                    > create emergency alert\n                    </Button>\n\n\n                </section>\n\n            </div>\n        </div>\n    );\n\n}\n\nexport default withRouter(EmergencyAlertsByPatient);","\nimport { withRouter } from 'react-router-dom';\nimport React, { Component, useEffect, useState } from 'react';\nimport '../Styles.css'\nimport Dashboard from '../Dashboard';\nimport Axios from 'axios';\nimport { Avatar, Button, Grid, TextField, Typography } from '@material-ui/core';\nimport Spinner from 'react-bootstrap/Spinner';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListIcon from '@material-ui/icons/List';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useStateValue } from '../../providers/StateProvider';\ntoast.configure();\n\nfunction CreateVitalSigns(props) {\n\n    const [{ endpoint_API }, dispatch] = useStateValue();\n\n    const apiUrl =  \"/registerVitalSigns\";\n\n    const [patient, setPatient] = useState([]);\n\n    const [creator, setCreator] = useState([]);\n\n    const [showLoading, setShowLoading] = useState(true);\n\n    const paramsUsertId = props.match.params.userId;\n\n    //Initializing user to get and set values by using onchange event\n    const [vitalSigns, setVitalSigns] = useState({\n        _id: '',\n        bodyTemperature: '',\n        heartRate: '',\n        bloodPressure: '',\n        respiratoryRate: '',\n        patient: '',\n        createdBy: ''\n    });\n\n    useEffect(() => {\n\n        setShowLoading(true);\n\n        readCookie();\n\n        getPatient(paramsUsertId);\n\n        setShowLoading(false);\n\n    }, []);\n\n    //******************************************** */\n    //Get the patient \n    //******************************************** */\n    const getPatient = async (userId) => {\n        const result = await Axios('/user/' + userId);\n        setPatient(result.data);\n    }\n\n    /******************************************** */\n    //Get the creator \n    //******************************************** */\n    const getCreatorUser = async (userId) => {\n        const result = await Axios('/user/' + userId);\n        setCreator(result.data);\n    }\n\n    //******************************************* */\n    //Reads the cookie to get user info\n    const readCookie = async () => {\n        try {\n            const res = await Axios.get('/read_cookie');\n            if (res.data.userEmail !== '') {\n                // setUserEmail(res.data.userEmail);\n                // setUserRole(res.data.userRole);                \n                getCreatorUser(res.data.userId);\n            }\n        } catch (e) {\n            props.history.push('/SignIn')\n            console.log(e);\n        }\n    };\n\n    //updates the vital sign values when changing the values\n    const onChange = (event) => {\n        event.persist();\n        setVitalSigns({ ...vitalSigns, [event.target.name]: event.target.value });\n    }\n\n    //Creates vital signs consuming backend services\n    const registerVitalSigns = () => {\n\n        const data = {\n            bodyTemperature: vitalSigns.bodyTemperature,\n            heartRate: vitalSigns.heartRate,\n            bloodPressure: vitalSigns.bloodPressure,\n            respiratoryRate: vitalSigns.respiratoryRate,\n            patient: patient,\n            createdBy: creator\n        };\n\n        console.log(apiUrl);\n        Axios.post(apiUrl, data)\n            .then((result) => {\n                setShowLoading(true);\n                toast.info('Vital signs created successfully!', { position: toast.POSITION.BOTTOM_RIGHT, })\n                setTimeout(function () {\n                    props.history.push({\n                        pathname: '/vitalSignsBypatient/' + paramsUsertId\n                    });\n                }, 1000);\n            }).catch((error) => {\n                toast.error('Error ' + error, { position: toast.POSITION.BOTTOM_RIGHT, });\n            })\n    };\n\n    return (\n        <div>\n            < Dashboard title='Register Vital Signs' />\n\n            <div class=\"container container__custom\">\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom\">\n\n                    {showLoading &&\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    }\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Register new Vital Signs\n                    </Typography>\n\n                    <hr></hr>                    \n\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"bodyTemperature\"\n                                name=\"bodyTemperature\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"bodyTemperature\"\n                                label=\"Body Temperature\"\n                                autoFocus\n                                value={vitalSigns.bodyTemperature}\n                                onChange={onChange}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"heartRate\"\n                                label=\"Heart Rate\"\n                                name=\"heartRate\"\n                                autoComplete=\"heartRate\"\n                                value={vitalSigns.heartRate}\n                                onChange={onChange}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"bloodPressure\"\n                                label=\"Blood Pressure\"\n                                name=\"bloodPressure\"\n                                autoComplete=\"bloodPressure\"\n                                value={vitalSigns.bloodPressure}\n                                onChange={onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"respiratoryRate\"\n                                label=\"Respiratory Rate\"\n                                id=\"respiratoryRate\"\n                                autoComplete=\"respiratoryRate\"\n                                value={vitalSigns.respiratoryRate}\n                                onChange={onChange}\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <hr></hr>   \n\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='button__custom'\n                        startIcon={<AddIcon />}\n                        onClick={() => { registerVitalSigns() }}\n                    >\n                        Register\n                    </Button>\n                    \n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<ListIcon />}\n                        className='button__custom'\n                        onClick={() => { \n                            props.history.push({\n                                pathname: '/vitalSignsBypatient/' + paramsUsertId\n                            });\n                         }}\n                    > Back to list\n                    </Button>\n                    \n\n\n                </section>\n            </div>\n        </div>\n    );\n\n}\n\nexport default withRouter(CreateVitalSigns);","\nimport { withRouter } from 'react-router-dom';\nimport React, { Component, useEffect, useState } from 'react';\nimport '../Styles.css'\nimport Dashboard from '../Dashboard';\nimport { useStateValue } from '../../providers/StateProvider';\nimport Axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Button, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nfunction VitalSignsByPatient(props) {\n\n    const [{ endpoint_API }, dispatch] = useStateValue();\n\n    const [vitalSigns, setVitalSigns] = useState([]);\n\n    const [patient, setPatient] = useState([]);\n\n    const [showLoading, setShowLoading] = useState(true);\n\n    const paramsUsertId = props.match.params.userId\n\n\n\n    useEffect(() => {\n\n        setShowLoading(true);\n        getVitalSigns(paramsUsertId);\n        getPatient(paramsUsertId);\n\n        setShowLoading(false);\n\n    }, []);\n\n\n    //******************************************** */\n    //  Get the patient \n    //******************************************** */\n    const getPatient = async (userId) => {\n        const result = await Axios('/user/' + userId);\n        setPatient(result.data);\n    }\n\n    //******************************************** */\n    //Gets patien's vital signs\n    //******************************************** */\n    const getVitalSigns = async (userId) => {\n\n        //Get vital signs by patient\n        const res = await Axios('/vitalSignsBypatient/' + userId);\n        console.log('********234')\n        console.log(res.data)\n        setVitalSigns(res.data);\n    }\n\n    //Call the view for register vital signs to parient by Id\n    const addVitalSigns = (userId) => {\n        props.history.push({\n            pathname: '/registerVitalSigns/' + userId\n        });\n    }\n\n    return (\n        <div>\n            < Dashboard title='Vital Signs' />\n\n            <div class=\"container container__custom\">\n\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom\">\n\n                    {showLoading &&\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    }\n                    \n                   \n                    <Typography component=\"h1\" variant=\"h5\">\n                    Vital Signs - Patient: {patient.fullName}\n                    </Typography>\n                    <p>The four main vital signs routinely monitored by medical professionals and health care providers:</p>\n\n\n                    <table class=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th>Body Temperature</th>\n                                <th>Heart Rate</th>\n                                <th>Blood Pressure</th>\n                                <th>Respiratory Rate</th>\n                                <th>Created By</th>\n                                <th>Date</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {vitalSigns.map((item) => (\n                                <tr key={item._id}>\n                                    <td>{item.bodyTemperature}</td>\n                                    <td>{item.heartRate}</td>\n                                    <td>{item.bloodPressure}</td>\n                                    <td>{item.respiratoryRate}</td>\n                                    <td>{item.createdBy.userType === 'nurse' ? 'Nurse. ' + item.createdBy.fullName : item.createdBy.fullName}</td>\n                                    <td>{item.date}</td>\n                                </tr>\n                            ))}\n\n                        </tbody>\n                    </table>\n\n                    <hr></hr>  \n\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<AddIcon />}\n                        className='button__custom'\n                        onClick={() => { addVitalSigns(paramsUsertId) }}\n                    > Register vital signs\n                    </Button>\n\n\n                </section>\n\n            </div>\n        </div>\n    );\n\n}\n\nexport default withRouter(VitalSignsByPatient);","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { FormControl, FormLabel } from '@material-ui/core';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport { useStateValue } from '../../providers/StateProvider';\nimport Axios from 'axios';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { withRouter } from 'react-router';\ntoast.configure();\n\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Cristian Zuluaga\n        </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nfunction SignUp(props) {\n    const classes = useStyles();\n\n    //var to set ad get radio button values\n    const [radioTypeValue, setRadioTypeValue] = React.useState('patient');\n\n    //Getting FRONT endpoint from reducer and stateProvider\n    const [{ endpoint_API }, dispatch] = useStateValue();\n    const apiUrl = endpoint_API + \"/createUser\";\n\n    //Initializing user to get and set values by using onchange event\n    const [user, setUser] = useState({\n        _id: '',\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: '',\n        userType: ''\n    });\n\n    //updates the user values when changing the values\n    const onChange = (event) => {\n        event.persist();\n        setUser({ ...user, [event.target.name]: event.target.value });\n    }\n\n    //updates the radio button values\n    const handleRadioTypeChange = (event) => {\n        setRadioTypeValue(event.target.value);\n    };\n\n    //Creates the user by consuming backend services\n    const createUser = (event) => {\n        event.preventDefault();\n\n        const data = {\n            firstName: user.firstName,\n            lastName: user.lastName,\n            email: user.email,\n            password: user.password,\n            userType: radioTypeValue\n        };\n\n        Axios.post(apiUrl, data)\n            .then((result) => {\n                toast.info('User ' + result.data.email + ' created Successfully!', { position: toast.POSITION.BOTTOM_RIGHT, })\n                setTimeout(function () {\n                    props.history.push('/')\n                }, 1000);\n            }).catch((error) => {\n                toast.error('Error ' + error, { position: toast.POSITION.BOTTOM_RIGHT, });\n            })\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n\n                <form className={classes.form} noValidate onSubmit={createUser}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                value={user.firstName}\n                                onChange={onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                value={user.lastName}\n                                onChange={onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                value={user.email}\n                                onChange={onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value={user.password}\n                                onChange={onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl component=\"fieldset\">\n                                <FormLabel component=\"legend\">I am a ...</FormLabel>\n                                <RadioGroup aria-label=\"role\" name=\"role\" value={radioTypeValue} onChange={handleRadioTypeChange}>\n                                    <FormControlLabel value=\"patient\" control={<Radio />} label=\"Patient\" />\n                                    <FormControlLabel value=\"nurse\" control={<Radio />} label=\"Nurse\" />\n                                </RadioGroup>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/\" variant=\"body2\">\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}\n\n\nexport default withRouter(SignUp);","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router';\nimport Axios from 'axios';\nimport { useStateValue } from '../../providers/StateProvider';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Cristian Zuluaga\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    // backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundImage: 'url(https://images.unsplash.com/photo-1557825835-a526494be845?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction SignIn(props) {\n\n  const classes = useStyles();\n\n  //store input field data, email and password\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const [{ endpoint_API }, dispatch] = useStateValue();\n  // const apiUrl = endpoint_API + \"/signIn\";\n   const apiUrl =  \"/signIn\";\n\n  //send email and password to the server to authenticate process\n  const authenticate = async () => {\n\n    try {\n      //make a get request to /authenticate end-point on the server\n      const loginData = {\n        auth: {\n          email,\n          password\n        }\n      }\n      console.log('----------345')\n      console.log(apiUrl)\n      const res = await Axios.post(apiUrl, loginData);\n      //process the response\n      if (res.data.status === 'success') {\n        props.history.push('/home')\n        toast.info('Welcome ' + res.data.userEmail + ' !', { position: toast.POSITION.BOTTOM_RIGHT, })\n      } else {\n        toast.error('Error: ' + res.data.message + ' !', { position: toast.POSITION.BOTTOM_RIGHT, })\n      }\n    } catch (e) {\n      console.log(e);\n    }\n\n  };\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={e => setEmail(e.target.value)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={e => setPassword(e.target.value)}\n            />\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={authenticate}\n            >\n              Sign In\n            </Button>\n\n            <Grid container>\n              <Grid item xs>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signUp\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nexport default withRouter(SignIn);","\nimport { withRouter } from 'react-router-dom';\nimport React, { Component, useEffect, useState } from 'react';\nimport '../Styles.css'\nimport Dashboard from '../Dashboard';\nimport { useStateValue } from '../../providers/StateProvider';\nimport Axios from 'axios';\nimport { Avatar, Button, Grid, TextField, Typography } from '@material-ui/core';\nimport Spinner from 'react-bootstrap/Spinner';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListIcon from '@material-ui/icons/List';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\n\nfunction CreateEmergencyAlert(props) {\n\n    const [{ endpoint_API }, dispatch] = useStateValue();\n\n    const apiUrl =  \"/registerEmergencyAlert\";\n\n    const [creator, setCreator] = useState([]);\n\n    const [showLoading, setShowLoading] = useState(true);\n\n    const paramsUsertId = props.match.params.userId;\n\n    //Initializing user to get and set values by using onchange event\n    const [emergencyAlert, setEmergencyAlert] = useState({\n        _id: '',\n        alertMessage: 'Default message - I need help ASAP',\n        createdBy: ''\n    });\n\n    useEffect(() => {\n\n        setShowLoading(true);\n\n        readCookie()\n\n        setShowLoading(false);\n\n    }, []);\n\n    /******************************************** */\n    //Get the creator \n    //******************************************** */\n    const getCreatorUser = async (userId) => {\n        const result = await Axios('/user/' + userId);\n        setCreator(result.data);\n    }\n\n    //******************************************* */\n    //Reads the cookie to get user info\n    const readCookie = async () => {\n        try {\n            const res = await Axios.get('/read_cookie');\n            if (res.data.userEmail !== '') {\n                // setUserEmail(res.data.userEmail);\n                // setUserRole(res.data.userRole);                \n                getCreatorUser(res.data.userId);\n            }\n        } catch (e) {\n            props.history.push('/SignIn')\n            console.log(e);\n        }\n    };\n\n    //updates the alert message values when changing the values\n    const onChange = (event) => {\n        event.persist();\n        setEmergencyAlert({ ...emergencyAlert, [event.target.name]: event.target.value });\n    }\n\n    //Creates amergency alert consuming backend services\n    const registerAlert = () => {\n\n        const data = {\n            alertMessage: emergencyAlert.alertMessage,\n            createdBy: creator\n        };\n\n        Axios.post(apiUrl, data)\n            .then((result) => {\n                setShowLoading(true);\n                toast.info('Emergency alert created successfully!', { position: toast.POSITION.BOTTOM_RIGHT, })\n                setTimeout(function () {\n                    props.history.push({\n                        pathname: '/emergencyAlertsBypatient/' + paramsUsertId\n                      });\n                }, 1000);\n            }).catch((error) => {\n                toast.error('Error ' + error, { position: toast.POSITION.BOTTOM_RIGHT, });\n            })\n    };\n\n    return (\n        <div>\n            < Dashboard title='Register Vital Signs' />\n\n            <div class=\"container container__custom\">\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom\">\n\n                    {showLoading &&\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    }\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Create new Emergency Alert\n                    </Typography>\n\n                    <hr></hr>                    \n\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                autoComplete=\"alertMessage\"\n                                name=\"alertMessage\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"alertMessage\"\n                                label=\"Alert message\"\n                                autoFocus\n                                value={emergencyAlert.alertMessage}\n                                onChange={onChange}\n                            />\n                        </Grid>\n\n                        \n                    </Grid>\n\n                    <hr></hr>   \n\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='button__custom'\n                        startIcon={<AddIcon />}\n                        onClick={() => { registerAlert() }}\n                    >\n                        send alert\n                    </Button>\n                    \n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<ListIcon />}\n                        className='button__custom'\n                        onClick={() => {\n                            props.history.push({\n                              pathname: '/emergencyAlertsBypatient/' + paramsUsertId\n                            });\n                          }} \n                    > Back\n                    </Button>\n                    \n\n\n                </section>\n            </div>\n        </div>\n    );\n\n}\n\nexport default withRouter(CreateEmergencyAlert);","import React, { Component, useEffect, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../Styles.css'\nimport Dashboard from '../Dashboard';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Button, Table } from '@material-ui/core';\nimport { useStateValue } from '../../providers/StateProvider';\nimport Axios from 'axios';\nimport HealingIcon from '@material-ui/icons/Healing';\n\nfunction ListPatients(props) {\n\n    const [{ endpoint_API }, dispatch] = useStateValue();\n\n    const [patients, setPatients] = useState([]);\n    const [showLoading, setShowLoading] = useState(true);\n\n    const apiUrl =  \"/patients\";\n\n    useEffect(() => {\n        setShowLoading(true);\n        const fetchData = async () => {\n            const result = await Axios(apiUrl);\n\n            setPatients((result.data));\n            setShowLoading(false);\n        };\n\n        fetchData();\n    }, []);\n\n\n    //Call the view for the patient vital signs\n    const vitalSigns = (userId) => {\n        props.history.push({\n            pathname: '/vitalSignsBypatient/' + userId\n        });\n    }\n\n    return (\n        <div>\n            < Dashboard title='Patient list' />\n\n            <div class=\"container container__custom\">\n\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom\">\n\n                    {showLoading &&\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    }\n                    <h2 class=\"jumbotron-heading\"> List of patients</h2>\n\n                    <table class=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th>Full name</th>\n                                <th>Email</th>\n                                <th>Options</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n\n                            {patients.map((item) => (\n                                <tr key={item._id}>\n                                    <td>{item.fullName}</td>\n                                    <td>{item.email}</td>\n                                    <td>\n                                        <Button\n                                            size='small'\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            startIcon={<HealingIcon />}\n                                            onClick={() => { vitalSigns(item._id) }}\n                                        > Vital signs\n                                        </Button>\n                                        \n                                    </td>\n                                </tr>\n                            ))}\n\n                        </tbody>\n                    </table>               \n\n\n\n\n                </section>\n\n            </div>\n        </div>\n    );\n\n}\n\nexport default withRouter(ListPatients);","import React from 'react'\nimport ReactPlayer from 'react-player/youtube'\nimport '../Styles.css'\n\nfunction VideoPlayer(props) {\n    return (\n        <div>\n            <div className='player-wrapper'>\n                <ReactPlayer\n                    className='react-player'\n                    url={props.url}\n                    width='100%'\n                    height='100%'\n                    controls={true}\n                    playing={true}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default VideoPlayer\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport { withRouter } from 'react-router';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport VideoPlayer from './VideoPlayer';\nimport Moment from 'react-moment';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\nfunction MotivationalMessageCard(props) {\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    return (\n        <div>\n            <Card className='motivational_card__custom' onClick={handleOpen}>\n                <CardActionArea>\n                    <CardMedia\n                        component=\"img\"\n                        alt=\"Contemplative Reptile\"\n                        height=\"140\"\n                        image={props.linkImage}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h4\" component=\"h2\">\n                            {props.title}\n                        </Typography>\n                        <Typography color=\"textSecondary\" component=\"p\">\n                            {props.description}\n                        </Typography>\n                        <hr></hr>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            Nurse. {props.createdBy.fullName} - <Moment format=\"YYYY-MM-DD HH:mm\">{props.creationDate}</Moment>\n                        </Typography>\n\n                    </CardContent>\n                </CardActionArea>\n\n            </Card>      \n\n\n\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 1000,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <div className='modal__custom'>\n                            <h2 id=\"transition-modal-title\">{props.title}</h2>\n                            <p id=\"transition-modal-description\">{props.description}</p>\n                            <VideoPlayer url={props.linkVideo} />\n                        </div>\n                    </div>\n                </Fade>\n            </Modal>\n\n        </div>\n\n\n    );\n}\n\nexport default withRouter(MotivationalMessageCard);\n\n//This code is for external videos using its ID\n{/* <div>\n<iframe id=\"inlineFrameExample\"\n    title=\"Inline Frame Example\"\n    width=\"608\"\n    height=\"480\"\n    scrolling='no'\n    frameborder='0'\n    src=\"siteUrl/embed/videoId\">\n</iframe>\n</div> */}\n","import { withRouter } from 'react-router-dom';\nimport React, { Component, useEffect, useState } from 'react';\nimport '../Styles.css'\nimport Dashboard from '../Dashboard';\nimport { useStateValue } from '../../providers/StateProvider';\nimport Axios from 'axios';\nimport Spinner from 'react-bootstrap/Spinner';\nimport { Button, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { readCookie } from '../../providers/reducer';\nimport VideoPlayer from './VideoPlayer';\nimport MotivationalMessageCard from './MotivationalMessageCard';\nimport CardColumns from 'react-bootstrap/CardColumns';\n\nfunction MotivationalMessagesList(props) {\n\n    const [{ endpoint_API }, dispatch] = useStateValue();\n\n    const [motivationalMessages, setMotivationalMessages] = useState([]);\n\n    const [patient, setPatient] = useState([]);\n\n    const [showLoading, setShowLoading] = useState(true);\n\n\n    //To store cookie credentials\n    const [userRole, setUserRole] = useState('');\n    const [userEmail, setUserEmail] = useState('');\n    const [userId, setUserId] = useState('');\n\n\n    useEffect(() => {\n\n        setShowLoading(true);\n\n\n        const getUserInfo = () => {\n            readCookie.then((result) => {\n                setUserEmail(result.userEmail);\n                setUserRole(result.userRole);\n                setUserId(result.userId);\n            });\n        }\n        getUserInfo();\n        getMotivationalMessages();\n        setShowLoading(false);\n\n    }, []);\n\n    //******************************************** */\n    //Gets motivational messages\n    // //******************************************** */\n    const getMotivationalMessages = async () => {\n\n        const res = await Axios('/motivationalMessages');\n        console.log(res.data)\n        setMotivationalMessages(res.data);\n    }\n\n    //Call the view for register the new entity of Motivational message\n    const addMotivationalMessage = () => {\n        props.history.push({\n            pathname: '/createMotivationalMessage/'\n        });\n    }\n\n    return (\n        <div>\n            < Dashboard title='Motivational Messages' />\n\n            <div class=\"container container__custom\">\n\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom\">\n\n\n                    {showLoading &&\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    }\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Motivational Messages\n                    </Typography>\n\n                    <hr></hr>\n\n                    <div className=\"motivational_cards_container__custom\">\n                        <CardColumns>\n                            {motivationalMessages.map((item) => (\n                                <MotivationalMessageCard\n                                    _id={item._id}\n                                    title={item.title}\n                                    description={item.description}\n                                    linkVideo={item.linkVideo}\n                                    linkImage={item.linkImage}\n                                    createdBy={item.createdBy}\n                                    creationDate={item.creationDate}\n                                />\n                            ))}\n                        </CardColumns>\n                    </div>\n\n                    <hr></hr>\n\n                    {userRole === 'nurse' ?\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<AddIcon />}\n                            className='button__custom'\n                            onClick={() => { addMotivationalMessage() }}\n                        > Create post\n                    </Button>\n                        :\n                        <div></div>\n                    }\n\n\n\n\n                </section>\n\n            </div>\n        </div>\n    );\n\n}\n\nexport default withRouter(MotivationalMessagesList);","\nimport { withRouter } from 'react-router-dom';\nimport React, { Component, useEffect, useState } from 'react';\nimport '../Styles.css'\nimport Dashboard from '../Dashboard';\nimport { useStateValue } from '../../providers/StateProvider';\nimport Axios from 'axios';\nimport { Avatar, Button, Grid, TextField, Typography } from '@material-ui/core';\nimport Spinner from 'react-bootstrap/Spinner';\nimport AddIcon from '@material-ui/icons/Add';\nimport ListIcon from '@material-ui/icons/List';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { readCookie } from '../../providers/reducer';\ntoast.configure();\n\nfunction CreateMotivationalMessage(props) {\n\n    const [{ endpoint_API }, dispatch] = useStateValue();\n\n    const apiUrl =  \"/createMotivationalMessage\";\n\n    const [creator, setCreator] = useState([]);\n\n    const [showLoading, setShowLoading] = useState(true);\n\n    //To store cookie credentials\n    const [userRole, setUserRole] = useState('');\n    const [userEmail, setUserEmail] = useState('');\n    const [userId, setUserId] = useState('');\n\n    //Initializing user to get and set values by using onchange event\n    const [motivationalMessage, setMotivationalMessage] = useState({\n        _id: '',\n        title: '',\n        description: '',\n        linkVideo: '',\n        linkImage: '',\n        createdBy: ''\n    });\n\n    useEffect(() => {\n\n        setShowLoading(true);\n        \n        const getUserInfo = () => {\n            readCookie.then((result) => {\n                setUserEmail(result.userEmail);\n                setUserRole(result.userRole);\n                setUserId(result.userId);\n                getCreatorUser(result.userId);\n            });\n        }\n        getUserInfo();\n        setShowLoading(false);\n\n    }, []);\n\n    /******************************************** */\n    //Get the creator \n    //******************************************** */\n    const getCreatorUser = async (userId) => {\n        const result = await Axios('/user/' + userId);\n        setCreator(result.data);\n    }\n\n    //updates the motivational message values when changing the values\n    const onChange = (event) => {\n        event.persist();\n        setMotivationalMessage({ ...motivationalMessage, [event.target.name]: event.target.value });\n    }\n\n    //Creates motivational message consuming backend services\n    const createMotivationalMessage = () => {\n\n        const data = {\n            title: motivationalMessage.title,\n            description: motivationalMessage.description,\n            linkVideo: motivationalMessage.linkVideo,\n            linkImage: motivationalMessage.linkImage,\n            createdBy: creator\n        };\n\n        \n        Axios.post(apiUrl, data)\n            .then((result) => {\n                setShowLoading(true);\n                toast.info('Motivational Message created successfully!', { position: toast.POSITION.BOTTOM_RIGHT, })\n                setTimeout(function () {\n                    props.history.push({\n                        pathname: '/motivationalMessages' \n                      });\n                }, 1000);\n            }).catch((error) => {\n                toast.error('Error ' + error, { position: toast.POSITION.BOTTOM_RIGHT, });\n            })\n    };\n\n    return (\n        <div>\n            < Dashboard title='Create Motivational Message' />\n\n            <div class=\"container container__custom\">\n                <section class=\"jumbotron text-center bg-light p-5 rounded jumbotron__custom\">\n\n                    {showLoading &&\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    }\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Create new Motivational Message\n                    </Typography>\n\n                    <hr></hr>                    \n\n                    <Grid container spacing={2}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                autoComplete=\"title\"\n                                name=\"title\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"title\"\n                                label=\"Title\"\n                                autoFocus\n                                value={motivationalMessage.title}\n                                onChange={onChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                autoComplete=\"description\"\n                                name=\"description\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"description\"\n                                label=\"Motivational message\"\n                                autoFocus\n                                value={motivationalMessage.description}\n                                onChange={onChange}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                autoComplete=\"linkImage\"\n                                name=\"linkImage\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"linkImage\"\n                                label=\"Image link\"\n                                autoFocus\n                                value={motivationalMessage.linkImage}\n                                onChange={onChange}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                autoComplete=\"linkVideo\"\n                                name=\"linkVideo\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"linkVideo\"\n                                label=\"Video link\"\n                                autoFocus\n                                value={motivationalMessage.linkVideo}\n                                onChange={onChange}\n                            />\n                        </Grid>\n\n                        \n                    </Grid>\n\n                    <hr></hr>   \n\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className='button__custom'\n                        startIcon={<AddIcon />}\n                        onClick={() => { createMotivationalMessage() }}\n                    >\n                        Create Motivational message\n                    </Button>\n                    \n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon={<ListIcon />}\n                        className='button__custom'\n                        onClick={() => {\n                            props.history.push({\n                              pathname: '/motivationalMessages' \n                            });\n                          }} \n                    > Back\n                    </Button>\n                    \n\n\n                </section>\n            </div>\n        </div>\n    );\n\n}\n\nexport default withRouter(CreateMotivationalMessage);","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nimport Home from './components/Home';\nimport About from './components/About';\nimport EmergencyAlertList from './components/EmergencyAlerts/EmergencyAlertList';\nimport EmergencyAlertResponse from './components/EmergencyAlerts/EmergencyAlertResponse';\nimport EmergencyAlertsByPatient from './components/EmergencyAlerts/EmergencyAlertsByPatient';\nimport CreateVitalSigns from './components/VitalSigns/CreateVitalSigns';\nimport VitalSignsByPatient from './components/VitalSigns/VitalSignsByPatient';\nimport SignUp from './components/Authentication/SignUp';\nimport SignIn from './components/Authentication/SignIn';\nimport CreateEmergencyAlert from './components/EmergencyAlerts/CreateEmergencyAlert';\nimport ListPatients from './components/Patients/ListPatients';\nimport MotivationalMessagesList from './components/MotivationalMessages/MotivationalMessagesList';\nimport CreateMotivationalMessage from './components/MotivationalMessages/CreateMotivationalMessage';\n//\nfunction App() {\n\n  return (\n    <div>\n      <Router>\n\n        <Switch>\n\n          <Route path=\"/signUp\">\n            <SignUp />\n          </Route>\n\n          <Route path=\"/signIn\">\n            <SignIn />\n          </Route>\n\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n\n          <Route path=\"/about\">\n            <About />\n          </Route>\n\n          <Route path=\"/listPatients\">\n            <ListPatients />\n          </Route>\n\n          <Route path=\"/vitalSignsBypatient/:userId\" >\n            <VitalSignsByPatient />\n          </Route >\n\n          <Route path=\"/registerVitalSigns/:userId\" >\n            <CreateVitalSigns />\n          </Route >\n\n          <Route path=\"/emergencyAlertsBypatient/:userId\" >\n            <EmergencyAlertsByPatient />\n          </Route >\n\n          <Route path=\"/registerEmergencyAlert/:userId\" >\n            <CreateEmergencyAlert />\n          </Route >\n\n          <Route path=\"/emergencyAlerts\">\n            <EmergencyAlertList />\n          </Route>\n\n          <Route path=\"/emergencyAlertResponse/:alertId\" >\n            <EmergencyAlertResponse />\n          </Route >\n\n          <Route path=\"/motivationalMessages\" >\n            <MotivationalMessagesList />\n          </Route >\n          \n          <Route path=\"/createMotivationalMessage\" >\n            <CreateMotivationalMessage />\n          </Route >          \n\n          <Route path=\"/\">\n            <SignIn />\n          </Route>\n\n        </Switch>\n\n      </Router>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { StateProvider } from './providers/StateProvider';\nimport reducer, { initialState } from './providers/reducer';\n//\nReactDOM.render(\n    <StateProvider initialState={initialState} reducer={reducer}>\n        <App />\n    </StateProvider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}